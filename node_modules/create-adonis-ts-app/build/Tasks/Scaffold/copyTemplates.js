"use strict";
/*
 * adonis-ts-boilerplate
 *
 * (c) Harminder Virk <virk@adonisjs.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const utils_1 = require("@poppinss/utils");
const sink_1 = require("@adonisjs/sink");
/**
 * Copy boilerplate files to the destination
 */
const task = (_, logger, { boilerplate, absPath }) => {
    const baseDir = path_1.join(__dirname, '..', '..', 'templates', boilerplate);
    const templateFiles = utils_1.fsReadAll(baseDir, () => true);
    templateFiles.forEach((name) => {
        if (name.endsWith('.ico')) {
            sink_1.utils.copyFiles(baseDir, absPath, [name]).forEach(({ filePath, state }) => {
                const action = logger.action('create');
                state === 'copied' ? action.succeeded(filePath) : action.skipped(filePath);
            });
            return;
        }
        const outputFileName = name.replace(/\.txt$/, '.ts');
        const src = path_1.join(baseDir, name);
        new sink_1.files.MustacheFile(absPath, outputFileName, src).apply({}).commit();
        logger.action('create').succeeded(outputFileName);
    });
};
exports.default = task;
