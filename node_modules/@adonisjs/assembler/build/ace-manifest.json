{"build":{"settings":{},"commandPath":"./commands/Build","commandName":"build","description":"Compile typescript code to Javascript.","args":[],"flags":[{"name":"production","propertyName":"production","type":"boolean","description":"Build for production","alias":"prod"},{"name":"client","propertyName":"client","type":"string","description":"Select the package manager to decide which lock file to copy to the build folder"}]},"invoke":{"settings":{},"commandPath":"./commands/Invoke","commandName":"invoke","description":"Run post install instructions for a given AdonisJS package","args":[{"type":"string","propertyName":"name","name":"name","required":true,"description":"Name of the package for which to invoke post install instructions"}],"flags":[]},"make:command":{"settings":{},"commandPath":"./commands/Make/Command","commandName":"make:command","description":"Make a new ace command","args":[{"type":"string","propertyName":"name","name":"name","required":true,"description":"Name of the command class"}],"flags":[]},"make:controller":{"settings":{},"commandPath":"./commands/Make/Controller","commandName":"make:controller","description":"Make a new HTTP controller","args":[{"type":"string","propertyName":"name","name":"name","required":true,"description":"Name of the controller class"}],"flags":[{"name":"resource","propertyName":"resource","type":"boolean","description":"Adds resourceful methods to the controller class","alias":"r"}]},"make:exception":{"settings":{},"commandPath":"./commands/Make/Exception","commandName":"make:exception","description":"Make a new exception handle","args":[{"type":"string","propertyName":"name","name":"name","required":true,"description":"Name of the exception class"}],"flags":[{"name":"self-handle","propertyName":"selfHandle","type":"boolean","description":"Add handle method to self handle the exception"}]},"make:listener":{"settings":{},"commandPath":"./commands/Make/Listener","commandName":"make:listener","description":"Make a new event listener class","args":[{"type":"string","propertyName":"name","name":"name","required":true,"description":"Name of the event listener class"}],"flags":[]},"make:middleware":{"settings":{},"commandPath":"./commands/Make/Middleware","commandName":"make:middleware","description":"Make a new middleware","args":[{"type":"string","propertyName":"name","name":"name","required":true,"description":"Name of the middleware class"}],"flags":[]},"make:prldfile":{"settings":{},"commandPath":"./commands/Make/PreloadFile","commandName":"make:prldfile","description":"Make a new preload file. Preloaded files are loaded automatically on boot","args":[{"type":"string","propertyName":"name","name":"name","required":true,"description":"Name of the file"}],"flags":[{"name":"environment","propertyName":"environment","type":"string","description":"Explicitly define the environment in which you want to load this file"}]},"make:provider":{"settings":{},"commandPath":"./commands/Make/Provider","commandName":"make:provider","description":"Make a new IoC container provider","args":[{"type":"string","propertyName":"name","name":"name","required":true,"description":"Name of the provider class"}],"flags":[{"name":"ace","propertyName":"ace","type":"boolean","description":"Registers provider under the ace providers array"}]},"make:validator":{"settings":{},"commandPath":"./commands/Make/Validator","commandName":"make:validator","description":"Make a new validator","args":[{"type":"string","propertyName":"name","name":"name","required":true,"description":"Name of the validator class"}],"flags":[]},"make:view":{"settings":{},"commandPath":"./commands/Make/View","commandName":"make:view","description":"Make a new view template","args":[{"type":"string","propertyName":"name","name":"name","required":true,"description":"Name of the view"}],"flags":[]},"serve":{"settings":{"stayAlive":true},"commandPath":"./commands/Serve","commandName":"serve","description":"Start the AdonisJS HTTP server. Optionally watch for file changes","args":[],"flags":[{"name":"watch","propertyName":"watch","type":"boolean","description":"Watch for file changes and re-start the HTTP server","alias":"w"},{"name":"poll","propertyName":"poll","type":"boolean","description":"Detect file changes by polling files instead of listening to filesystem events","alias":"p"},{"name":"node-args","propertyName":"nodeArgs","type":"array","description":"CLI options to pass to the node command line"}]}}
